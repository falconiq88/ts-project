generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  user      user     @relation(fields: [authorId], references: [id], map: "Post_authorId_fkey",onDelete: Cascade)

  @@index([authorId], map: "Post_authorId_fkey")
}

model profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique(map: "Profile_userId_key")
  user   user    @relation(fields: [userId], references: [id], map: "Profile_userId_fkey",onDelete: Cascade)
}

model token {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique(map: "Token_userId_key")
  token     String
  expiresAt DateTime
  user      user     @relation(fields: [userId], references: [id], map: "Token_userId_fkey",onDelete: Cascade)
}

model user {
  id          Int       @id @default(autoincrement())
  email       String    @unique(map: "User_email_key")
  password    String
  name        String?
  verified_at DateTime?
  role        String    @default("user")
  post        post[]
  profile     profile?
  token       token?
}



model forgot_password {
  id          Int       @id @default(autoincrement())
  email       String    @unique()
  token       String?
  expiresAt  DateTime
}
